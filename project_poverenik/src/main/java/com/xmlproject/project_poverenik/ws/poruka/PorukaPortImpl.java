
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.xmlproject.project_poverenik.ws.poruka;

import com.xmlproject.project_poverenik.model.poruka.Poruka;
import com.xmlproject.project_poverenik.repository.PorukaRepository;
import com.xmlproject.project_poverenik.service.ZalbaNaCutanjeService;
import com.xmlproject.project_poverenik.service.ZalbaNaOdlukuService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.UUID;
import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;


/**
 * This class was generated by Apache CXF 3.2.1
 * 2020-12-26T14:56:21.123+01:00
 * Generated source version: 3.2.1
 * 
 */

@WebService(
                      serviceName = "PorukaService",
                      portName = "PorukaPort",
                      targetNamespace = "http://soap.spring.com/ws/message",
                     // wsdlLocation = "classpath:wsdl/Hello.wsdl",
                      endpointInterface = "com.xmlproject.project_poverenik.ws.poruka.PorukaInterface")
@Component
public class PorukaPortImpl implements PorukaInterface {
	@Autowired
	private PorukaRepository porukaRepository;

	@Autowired
	private ZalbaNaCutanjeService zalbaNaCutanjeService;

	@Autowired
	private ZalbaNaOdlukuService zalbaNaOdlukuService;

	@Override
	public boolean sendMessage(Poruka msg) {
		// da li je prihvacena/odbijena i promijenim status
		// split po spaceu, zadnja je prihvacena ili odbijena, predzanja je id zalbe i to provjeravamo
		// i sacuvati u bazu
		// format primljene poruke: "Zalba na "["odluku"|"cutanje"] [id zalbe] ['prihvacena'|'odbijena']
		try {
			String[] delovi = msg.getTelo().split(" ");
			String prihvacena = delovi[delovi.length - 1];
			String idZalbe = delovi[delovi.length - 2];
			String odluka = delovi[delovi.length - 3];
			String status;
			if (prihvacena.equals("prihvacena")) status = "прихваћена";
				else status = "чека решење";

			if (odluka.equals("odluku")){
				zalbaNaOdlukuService.setPrihvaceno(idZalbe.substring(0, idZalbe.length() - 4), status);
			}
			if (odluka.equals("cutanje")){
				zalbaNaCutanjeService.setPrihvaceno(idZalbe.substring(0, idZalbe.length() - 4), status);
			}

		}catch (Exception e) {

		}
		// upisati poruku
		String id = UUID.randomUUID().toString();
		try {
			porukaRepository.save(id,msg);
		} catch (Exception exception) {
			exception.printStackTrace();
		}


		System.out.println("[" + msg.getVreme() + "] Nova poruka: " + msg.getTelo());
		return true;
	}

}
